// Code generated by MockGen. DO NOT EDIT.
// Source: uam_dao.go

// Package uam_dao_mocks is a generated GoMock package.
package uam_dao_mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUamDAO is a mock of UamDAO interface
type MockUamDAO struct {
	ctrl     *gomock.Controller
	recorder *MockUamDAOMockRecorder
}

// MockUamDAOMockRecorder is the mock recorder for MockUamDAO
type MockUamDAOMockRecorder struct {
	mock *MockUamDAO
}

// NewMockUamDAO creates a new mock instance
func NewMockUamDAO(ctrl *gomock.Controller) *MockUamDAO {
	mock := &MockUamDAO{ctrl: ctrl}
	mock.recorder = &MockUamDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUamDAO) EXPECT() *MockUamDAOMockRecorder {
	return m.recorder
}

// CreateUser mocks base method
func (m *MockUamDAO) CreateUser(arg0, arg1 string) (uint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0, arg1)
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser
func (mr *MockUamDAOMockRecorder) CreateUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUamDAO)(nil).CreateUser), arg0, arg1)
}

// CheckIfUserExists mocks base method
func (m *MockUamDAO) CheckIfUserExists(arg0, arg1 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckIfUserExists", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckIfUserExists indicates an expected call of CheckIfUserExists
func (mr *MockUamDAOMockRecorder) CheckIfUserExists(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckIfUserExists", reflect.TypeOf((*MockUamDAO)(nil).CheckIfUserExists), arg0, arg1)
}

// DeleteUser mocks base method
func (m *MockUamDAO) DeleteUser(arg0 uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUser indicates an expected call of DeleteUser
func (mr *MockUamDAOMockRecorder) DeleteUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUser", reflect.TypeOf((*MockUamDAO)(nil).DeleteUser), arg0)
}
