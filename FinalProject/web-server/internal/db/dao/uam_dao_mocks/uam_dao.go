// Code generated by MockGen. DO NOT EDIT.
// Source: uam_dao.go

// Package uam_dao_mocks is a generated GoMock package.
package uam_dao_mocks

import (
	models "github.com/danielpenchev98/FMI-Golang/FinalProject/web-server/internal/db/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUamDAO is a mock of UamDAO interface
type MockUamDAO struct {
	ctrl     *gomock.Controller
	recorder *MockUamDAOMockRecorder
}

// MockUamDAOMockRecorder is the mock recorder for MockUamDAO
type MockUamDAOMockRecorder struct {
	mock *MockUamDAO
}

// NewMockUamDAO creates a new mock instance
func NewMockUamDAO(ctrl *gomock.Controller) *MockUamDAO {
	mock := &MockUamDAO{ctrl: ctrl}
	mock.recorder = &MockUamDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUamDAO) EXPECT() *MockUamDAOMockRecorder {
	return m.recorder
}

// Migrate mocks base method
func (m *MockUamDAO) Migrate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Migrate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Migrate indicates an expected call of Migrate
func (mr *MockUamDAOMockRecorder) Migrate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Migrate", reflect.TypeOf((*MockUamDAO)(nil).Migrate))
}

// CreateUser mocks base method
func (m *MockUamDAO) CreateUser(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser
func (mr *MockUamDAOMockRecorder) CreateUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUamDAO)(nil).CreateUser), arg0, arg1)
}

// GetUser mocks base method
func (m *MockUamDAO) GetUser(arg0 string) (models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", arg0)
	ret0, _ := ret[0].(models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser
func (mr *MockUamDAOMockRecorder) GetUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockUamDAO)(nil).GetUser), arg0)
}

// DeleteUser mocks base method
func (m *MockUamDAO) DeleteUser(arg0 uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUser", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUser indicates an expected call of DeleteUser
func (mr *MockUamDAOMockRecorder) DeleteUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUser", reflect.TypeOf((*MockUamDAO)(nil).DeleteUser), arg0)
}

// CreateGroup mocks base method
func (m *MockUamDAO) CreateGroup(arg0 uint, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGroup", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateGroup indicates an expected call of CreateGroup
func (mr *MockUamDAOMockRecorder) CreateGroup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGroup", reflect.TypeOf((*MockUamDAO)(nil).CreateGroup), arg0, arg1)
}

// AddUserToGroup mocks base method
func (m *MockUamDAO) AddUserToGroup(arg0 uint, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUserToGroup", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddUserToGroup indicates an expected call of AddUserToGroup
func (mr *MockUamDAOMockRecorder) AddUserToGroup(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUserToGroup", reflect.TypeOf((*MockUamDAO)(nil).AddUserToGroup), arg0, arg1, arg2)
}

// RemoveUserFromGroup mocks base method
func (m *MockUamDAO) RemoveUserFromGroup(arg0 uint, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveUserFromGroup", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveUserFromGroup indicates an expected call of RemoveUserFromGroup
func (mr *MockUamDAOMockRecorder) RemoveUserFromGroup(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveUserFromGroup", reflect.TypeOf((*MockUamDAO)(nil).RemoveUserFromGroup), arg0, arg1, arg2)
}
